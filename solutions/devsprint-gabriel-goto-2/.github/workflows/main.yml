# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      ## Checkout our repository ###
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Restore gradle.properties
        env:
          github_access_token: ${{ secrets.AUTH_SECRET_APOLLO }}
        shell: bash
        run: |
            echo "github_access_token=${github_access_token}" >> gradle.properties

      - name: Prepare cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Setup Java JDK
        uses: actions/setup-java@v2.3.1
        with:
          java-version: 11
          distribution: adopt

      - name: Setup ruby
        uses: actions/setup-ruby@v1

      - name: Bundle Install
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Pre Danger
        run: bundle exec danger --danger_id=Pre-CI --remove-previous-comments --verbose --fail-on-errors=true --dangerfile=.danger/Pre-Ci-Dangerfile
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

      - name: Detekt
        run: ./tools/linters/detekt/detekt.sh

      - name: Run Test
        run: ./gradlew test

      - name: Post Danger
        if: always()
        run: bundle exec danger --danger_id=Post-CI --remove-previous-comments --verbose --fail-on-errors=true --dangerfile=.danger/Post-Ci-Dangerfile
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

      - name: Build app
        run: ./gradlew app:assembleRelease

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: release-aab
          path: |
            app/build/outputs/bundle/release/app-release.aab
            app/build/outputs/mapping/release/mapping.txt
      - name: Get APP version
        id: version
        run: echo "::set-output name=app_version_name::$(cat gradle.properties | grep VERSION_NAME | cut -d '=' -f2)"

      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.version.outputs.app_version_name }}"

      - uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.version.outputs.app_version_name }}"
          name: "${{ steps.version.outputs.app_version_name }}"
          artifacts: "app/build/outputs/apk/release/app-release.apk,app/build/outputs/mapping/release/*.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
